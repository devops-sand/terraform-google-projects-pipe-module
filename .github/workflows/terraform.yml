name: "Terraform CI"

on:
  push:
    branches:
    - master
  pull_request:

env:
  TF_CLOUD_ORGANIZATION: ${{ secrets.TF_ORGANIZATION }} # Get the Terraform Cloud organization from Github secrets
  TF_WORKSPACE: ${{ secrets.TF_WORKSPACE }} # Get the Terraform workspace from Github secrets
  CONFIG_DIRECTORY: "./"

permissions:
  contents: read
  pull-requests: write

defaults:
  run:
    shell: bash

jobs:
  terraform-init-plan:  # Job for PR events
    if: github.event_name == 'pull_request'
    name: "Terraform Init & Plan"
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.2
        id: plan-upload
        with:
          token: ${{ secrets.TF_API_TOKEN }}
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Plan Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.2
        id: plan-run
        with:
          token: ${{ secrets.TF_API_TOKEN }}
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}

      - name: Get Plan Output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.2
        id: plan-output
        with:
          token: ${{ secrets.TF_API_TOKEN }}
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
          plan: ${{ fromJSON(steps.plan-run.outputs.payload).data.relationships.plan.data.id }}
      
      - name: Discard Run
        if: failure()
        uses: hashicorp/tfc-workflows-github/actions/discard-run@v1.0.2
        with:
          token: ${{ secrets.TF_API_TOKEN }}
          workspace: ${{ env.TF_WORKSPACE }}
          run: ${{ fromJSON(steps.plan-run.outputs.payload).data.id }}
  
    outputs:
      payload: ${{ steps.plan-run.outputs.payload }}

  terraform-apply:  # Job for push events
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: terraform-init-plan
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Apply Run
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.2
        with:
          token: ${{ secrets.TF_API_TOKEN }}
          workspace: ${{ env.TF_WORKSPACE }}
          run: ${{ fromJSON(needs.terraform-init-plan.outputs.payload).data.id }} # Get the run ID from the payload of the terraform-plan job and apply the run
